//Numpy array shape [1, 1, 24, 40]
//Min -0.993107855320
//Max 0.994024395943
//Number of zeros 0

#ifndef W16_H_
#define W16_H_

#ifndef __SYNTHESIS__
conv2d_811_weight_t w16[960];
#else
conv2d_811_weight_t w16[960] = {0, -0, -0, -1, -0, -0, -0, 0, 0, 0, -0, 0, -0, -0, 0, -1, 0, -0, 0, 0, -0, 0, -1, 0, -0, -0, 0, -0, 0, 0, -0, -0, 0, 0, 0, 0, 0, 0, -0, 0, -0, -0, 0, -0, 0, 0, 0, -0, -0, 0, 0, 1, 0, -0, 0, -0, -1, -0, -0, -0, 0, 0, -0, 0, -0, -0, -0, -0, -0, -0, 0, 0, -0, 0, 0, -0, 1, -0, -0, 0, 1, -0, 0, 0, 0, -0, -0, 0, 0, 0, 0, 0, -0, 0, -0, 0, -0, -0, 0, 0, 0, 0, -0, 0, 1, 0, 0, -0, 0, -0, -0, -0, -0, -0, -0, 0, 0, 0, 0, -0, -0, 0, -0, -0, 0, -0, -0, -0, 1, -0, -0, 0, -0, 0, 0, -1, 0, 0, -0, 0, -0, 0, -0, -0, 0, -0, 0, -0, 0, -0, -0, -0, 1, -0, -0, 0, -0, 0, 0, -0, 0, 0, -0, 0, 0, 0, -0, 0, -0, 0, -0, -0, 1, 0, 0, -0, 1, -0, -0, -0, 0, -0, 0, -0, -0, 0, 0, 0, -0, 0, 0, -0, 0, 0, 0, -0, 1, 0, 0, -0, 1, -0, -0, 0, -0, -0, -0, -0, 0, 0, 0, 0, 0, 0, -0, -0, 0, -0, -0, 1, -0, 0, 0, 0, -0, -0, 0, -0, 0, -0, 0, 0, -0, -0, 0, 0, -0, 0, 0, -0, -0, 0, 0, 0, 0, 0, 0, -0, 0, -0, -0, -0, -0, -0, -0, 0, -0, 0, -0, -0, -0, -0, 0, 0, 0, -0, 0, 0, -0, -0, 0, -0, -1, -0, 0, -0, 0, 0, 0, -1, -0, 0, 0, 0, -0, 0, -0, 0, -0, -0, -0, 0, 1, 0, 0, -0, 1, -1, 0, -0, -0, -0, -0, 0, -0, -0, 0, -0, -0, 0, 0, 0, 0, 0, -0, 1, 0, -0, -0, 0, -0, -0, -0, -1, 0, 0, -0, 0, -0, -0, 0, 0, 0, 0, 0, -0, 0, -0, -0, -0, 1, -0, -0, -0, 1, 0, -0, -0, -0, 0, -0, -0, 0, -0, 0, 0, 0, -0, -0, 0, -0, -0, 0, -0, -0, 0, -0, 0, 0, -0, -0, 1, -0, 0, 0, -0, 0, 0, -0, 0, -0, -0, -0, -0, -0, -0, 0, -0, 1, 0, 0, -0, 1, -0, 0, 0, -0, -0, -0, 0, -0, 0, -0, 0, -0, -0, 0, 0, -0, 0, 0, 0, 0, -0, -0, -0, 0, -0, -0, -0, 0, 0, 0, -0, 0, 0, -0, 0, -0, 0, -0, -0, 0, 0, -0, -0, -0, 0, -0, -0, -1, -0, 0, 0, 0, -0, -0, 0, 0, 0, 0, -0, -0, -0, 0, 0, -0, 0, -0, 0, -0, 0, 0, -0, -0, 0, 0, -0, 0, -0, 0, 0, -0, 0, 0, -0, -0, -0, 0, 0, 0, 0, 0, 0, -1, -0, 0, 0, -1, 0, 0, 0, 0, 0, -0, 0, 0, 0, 0, -0, -0, -0, -0, 0, 0, 0, -0, -0, -0, -0, 0, -0, -1, -0, -0, 0, -0, -0, 0, 0, 0, 0, -0, 0, 0, -0, 0, -0, 0, -0, -0, 1, -1, 0, 0, 0, -0, 0, 0, -0, 1, 0, -0, 0, -0, -0, 0, -0, 0, -0, 0, -0, -0, 0, -0, 0, -0, -0, -0, 0, -0, -0, 0, -0, 0, 0, -0, -0, -0, -0, -0, 0, 0, 0, 0, 0, 0, -0, -0, 0, -1, -0, -0, 0, -0, 0, 0, -0, 0, 0, 0, 0, 0, -0, 0, -0, -0, -0, -0, -0, -0, -0, -0, -1, 1, -0, 0, -0, 1, -0, -0, 0, -0, -0, 0, -0, -0, -0, -0, 0, 0, 0, -0, -0, -0, -0, 0, 0, -0, 0, 0, -0, -0, -0, -0, -0, 0, -0, 0, 1, -0, 0, 0, 0, -0, 0, 1, 0, -0, -0, -0, 0, 0, -0, -0, -0, 0, 0, -0, -0, 0, 0, 0, 0, -0, 0, -0, -0, 0, 0, 0, 0, -0, 0, -0, 0, 0, 0, 0, 0, 1, -0, -0, -0, 0, 0, -0, -0, -0, -0, -0, 0, 0, 0, 0, -0, -0, -0, -0, -0, -1, -0, -0, 0, -1, 0, -0, 0, 0, -0, 0, -1, 0, 0, 0, -0, 0, -0, -0, 0, 0, -0, 0, -0, -0, 0, -0, 0, -0, 0, -0, 0, -0, 0, 0, 0, 0, -0, -0, -0, -0, -0, 0, -0, 0, 0, 0, 0, -0, 0, 0, -0, -0, 0, -0, -0, 1, -0, -0, 1, -0, 0, 0, -0, 0, -0, 1, -0, -0, -0, -0, -0, -0, 0, -0, 0, 0, 0, -0, 0, 0, -0, 0, 0, 0, 0, 0, 0, -0, -0, 0, -0, 0, 0, 0, -1, 0, -0, -0, 0, 0, -0, -0, -0, -0, -0, 0, -0, -0, -0, -0, 0, 0, 0, -0, -0, -0, 0, 0, -0, 1, 0, 0, -0, 1, -0, 0, 0, -0, -0, -0, 0, 0, 0, 0, 0, 0, -0, 0, 0, -0, -0, 0, -0, 0, -0, 0, 0, 0, 0, 0, 0, 0, 0, -0, 0, 0, 0, 0, -0, 0, 0, -0, 0, -0, 0, -0, 0, 0, -0, 0, -0, 0, -0, 0, -0, 0, -0, 0, -0, 0, -0, -0, 0, -0, 0, -0, 0, -0, -0, -0, 0, 0, 0, -0, -0, 1, 0, 0, -0, -0, 0, -0, -0, -0, -0, -0, 0, -0, 0, -0, 0, 0, 0, -0, -0, -0, 0, 0, 0, -0, 0, 0, 0, -0, 0, 0, 0, 0, 0, 0, -0, 0, -0, -0, 0, -0, -0, 0, 0, -1, 0, 0, -0, -0, -0, -0, -0, 0, -0, 0, 0, 0, -0, 0, -0, 0, 0, 0, -0};
#endif

#endif
